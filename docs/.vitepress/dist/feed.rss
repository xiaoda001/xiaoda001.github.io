<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>小达零零壹</title>
        <link>https://blog.xiaoda001.top</link>
        <description>编程爱好者/技术爬行者/生活足迹</description>
        <lastBuildDate>Thu, 17 Jul 2025 17:04:57 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-cn</language>
        <image>
            <title>小达零零壹</title>
            <url>https://blog.xiaoda001.top/logo.png</url>
            <link>https://blog.xiaoda001.top</link>
        </image>
        <copyright>Copyright (c) 2024-present, 小达零零壹</copyright>
        <item>
            <title><![CDATA[vscode 运行 vue3 项目卡顿清空处理]]></title>
            <link>https://blog.xiaoda001.top/article/fontend/vue/01_vscode运行vue3项目卡顿清空处理/</link>
            <guid>https://blog.xiaoda001.top/article/fontend/vue/01_vscode运行vue3项目卡顿清空处理/</guid>
            <pubDate>Sun, 22 Jun 2025 11:45:04 GMT</pubDate>
            <description><![CDATA[vscode 运行 vue3 项目卡顿清空处理
创建 vue3 项目，在 vscode 上创建新文件，经常出现代码提示缓慢，需要不断的重启 vscode。主要原因是 vscode 自带的 ts 解析插]]></description>
            <content:encoded><![CDATA[<h1 id="vscode-运行-vue3-项目卡顿清空处理" tabindex="-1">vscode 运行 vue3 项目卡顿清空处理 <a class="header-anchor" href="#vscode-运行-vue3-项目卡顿清空处理" aria-label="Permalink to &quot;vscode 运行 vue3 项目卡顿清空处理&quot;"></a></h1>
<p>创建 vue3 项目，在 vscode 上创建新文件，经常出现代码提示缓慢，需要不断的重启 vscode。主要原因是 vscode 自带的 ts 解析插件与<code>Volar</code>插件冲突，需要禁用 vscode 的 ts 解析插件。</p>
<h2 id="禁用-vscode-的-ts-解析插件" tabindex="-1">禁用 vscode 的 ts 解析插件 <a class="header-anchor" href="#禁用-vscode-的-ts-解析插件" aria-label="Permalink to &quot;禁用 vscode 的 ts 解析插件&quot;"></a></h2>
<ol>
<li>在当前项目的工作空间下，用 Ctrl + Shift + P (macOS：Cmd + Shift + P) 唤起命令面板。</li>
<li>输入 built，然后选择“Extensions：Show Built-in Extensions”。</li>
<li>在插件搜索框内输入 typescript (不要删除 @builtin 前缀)。</li>
<li>点击“TypeScript and JavaScript Language Features”右下角的小齿轮设置图标，然后在下拉菜单中选择“Disable (Workspace)”。</li>
<li>重新加载工作空间（重启 vscode 或者 reload window）。Takeover 模式将会在你打开一个 Vue 或者 TS 文件时自动启用。</li>
</ol>
<h2 id="另一种方法-推荐" tabindex="-1">另一种方法 (推荐) <a class="header-anchor" href="#另一种方法-推荐" aria-label="Permalink to &quot;另一种方法 (推荐)&quot;"></a></h2>
<ul>
<li>vscode 设置中搜索<code>vue.server.hybridMode</code>，将其设置为<code>false</code></li>
<li>重启插件，或者重启 vscode</li>
<li>等待 vscode 初始化完成，再看看是否有卡顿现象</li>
</ul>
<h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;"></a></h2>
<ol>
<li><a href="https://cloud.tencent.com/developer/article/2350048" target="_blank" rel="noreferrer">vscode 编写 vue3 项目代码提示缓慢问题处理</a></li>
</ol>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[python 版本管理工具 pyenv 安装 & 卸载]]></title>
            <link>https://blog.xiaoda001.top/article/python/01_python版本管理工具pyenv/</link>
            <guid>https://blog.xiaoda001.top/article/python/01_python版本管理工具pyenv/</guid>
            <pubDate>Sun, 22 Jun 2025 09:43:20 GMT</pubDate>
            <description><![CDATA[python 版本管理工具 pyenv 安装 & 卸载

 安装
- 打开 powershell
```cmd
Invoke-WebRequest -UseBasicParsing -Uri "htt]]></description>
            <content:encoded><![CDATA[<h1 id="python-版本管理工具-pyenv-安装-卸载" tabindex="-1">python 版本管理工具 pyenv 安装 &amp; 卸载 <a class="header-anchor" href="#python-版本管理工具-pyenv-安装-卸载" aria-label="Permalink to &quot;python 版本管理工具 pyenv 安装 &amp; 卸载&quot;"></a></h1>
<blockquote>
<p>由于电脑系统是 windows, 这里安装的是 pyenv-win, 安装步骤参考: <a href="https://github.com/pyenv-win/pyenv-win?tab=readme-ov-file#introduction" target="_blank" rel="noreferrer">https://github.com/pyenv-win/pyenv-win?tab=readme-ov-file#introduction</a></p>
</blockquote>
<h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;"></a></h2>
<ul>
<li>打开 powershell</li>
</ul>
<div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Invoke</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">WebRequest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">UseBasicParsing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">Uri </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"https://raw.githubusercontent.com/pyenv-win/pyenv-win/master/pyenv-win/install-pyenv-win.ps1"</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">OutFile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"./install-pyenv-win.ps1"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">&#x26;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"./install-pyenv-win.ps1"</span></span></code></pre>
</div><ul>
<li>重启 powershell，查看 pyenv 版本号，确认是否安装成功</li>
</ul>
<div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">pyenv </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">version</span></span></code></pre>
</div><h2 id="卸载" tabindex="-1">卸载 <a class="header-anchor" href="#卸载" aria-label="Permalink to &quot;卸载&quot;"></a></h2>
<ul>
<li>在系统盘(通常为：C 盘)的用户名文件夹下，找到<code>.pyenv</code>文件夹将其删除。</li>
<li>此电脑-&gt;属性-&gt;系统属性-&gt;环境变量-&gt;用户变量下的<code>path</code>中删除<code>.pyenv</code>相关注册信息。</li>
<li>重启 powershell，查看 pyenv 版本号，确认是否卸载成功。</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vmware17 安装 macos14]]></title>
            <link>https://blog.xiaoda001.top/article/vmware/01_vmware17安装macos14/</link>
            <guid>https://blog.xiaoda001.top/article/vmware/01_vmware17安装macos14/</guid>
            <pubDate>Thu, 16 Jan 2025 15:45:54 GMT</pubDate>
            <description><![CDATA[vmware17 安装 macos14
 准备工作
- 下载 vmware 与 解锁工具: https://pan.baidu.com/s/1_-yeQDr0aX7IsyDtcBfk-g?pwd=cu]]></description>
            <content:encoded><![CDATA[<h1 id="vmware17-安装-macos14" tabindex="-1">vmware17 安装 macos14 <a class="header-anchor" href="#vmware17-安装-macos14" aria-label="Permalink to &quot;vmware17 安装 macos14&quot;"></a></h1>
<h2 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;"></a></h2>
<ul>
<li>下载 vmware 与 解锁工具: <a href="https://pan.baidu.com/s/1_-yeQDr0aX7IsyDtcBfk-g?pwd=cu7e" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1_-yeQDr0aX7IsyDtcBfk-g?pwd=cu7e</a></li>
<li>下载 macos 14 系统: <a href="https://macoshome.com/macos/38891.html" target="_blank" rel="noreferrer">https://macoshome.com/macos/38891.html</a></li>
<li>下载 Chameleon-Wizard：<a href="https://mac.softpedia.com/get/Utilities/Chameleon-Wizard.shtml" target="_blank" rel="noreferrer">https://mac.softpedia.com/get/Utilities/Chameleon-Wizard.shtml</a></li>
</ul>
<h2 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;"></a></h2>
<ul>
<li>参考此链接：<a href="https://blog.csdn.net/github_35856054/article/details/134719935" target="_blank" rel="noreferrer">https://blog.csdn.net/github_35856054/article/details/134719935</a></li>
</ul>
<h2 id="遇到的问题" tabindex="-1">遇到的问题 <a class="header-anchor" href="#遇到的问题" aria-label="Permalink to &quot;遇到的问题&quot;"></a></h2>
<ul>
<li>无法登录 appid
<ul>
<li>参考此链接：<a href="https://www.dhzy.fun/archives/5966.html" target="_blank" rel="noreferrer">https://www.dhzy.fun/archives/5966.html</a></li>
</ul>
</li>
</ul>
<h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;"></a></h2>
<ul>
<li><a href="https://blog.csdn.net/github_35856054/article/details/134719935" target="_blank" rel="noreferrer">vmware 虚拟机 17 安装 macos14 过程及问题处理亲测</a></li>
<li><a href="https://www.dhzy.fun/archives/5966.html" target="_blank" rel="noreferrer">修改苹果系统的序列号</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[记录通过个人公众号下载微信表情包项目失败告终过程]]></title>
            <link>https://blog.xiaoda001.top/article/official-accounts/01_记录通过个人公众号下载微信表情包项目失败告终过程/</link>
            <guid>https://blog.xiaoda001.top/article/official-accounts/01_记录通过个人公众号下载微信表情包项目失败告终过程/</guid>
            <pubDate>Wed, 06 Nov 2024 17:37:13 GMT</pubDate>
            <description><![CDATA[
# 记录通过个人公众号下载微信表情包项目失败告终过程

起因微信中有很多有趣的表情包，在其他软件上想用时却找不到下载按钮。偶然发现一些公众号可以下载微信收藏的表情包。从而想通过个人公众号将表情包下载到本地。

### 项目流程图

![](./images/01.svg)

根据上图流程建立起了服务端，并且对接了公众号接口校验、通知事件、解析 xml 的功能。但是在公众号发送表情包消息时，服务端接收不了表情包，经过网上文章的探查，微信公众号通知的消息是不支持表情包。服务端会收到`[收到不支持的消息类型，暂无法显示]`的消息。可是别人的公众号为什么能提供下载表情包的能力呢？又经过一番网上文章的搜查，发现了两种方法。一种是爬虫，一种是利用公众号客服的能力。

1.  爬虫获取表情包。(个人可做)

开发者服务器接收公众号通知的消息事件里的内容是没有表情包内容的。可是在小程序后台的私信功能上可以看到用户发的消息，包括表情包。到这里我们就想到了爬虫的方式去获取表情包。但是爬虫是需要处理鉴权、数据获取、获取表情包数据的接口所需要的数据获取，还要考虑怎么做到自动化处理整个流程。开发时间周期长，而且不一定能成功，毕竟不知道会不会出现封禁的风险。

2. 公众号客服能力获取表情包。（公众号需要认证）

根据公众号的文档，是可以将用户发送的消息转发到指定客服上的，还能通过提供的接口能力获取客服的历史消息。按照这个流程轻松就能获取到用户的表情包消息，并且还不用自己存储表情包，成本大大降低。但是这个能力是需要公众号认证的。个人公众号基本无望。

### 结论

发现提供下载表情包的公众号，都是公司主体，没发现个人主体。基本就宣告了个人公众号开发开发此功能基本无望。不过可以尝试一下爬虫方式，就是会有点麻烦。我就不折腾了，要保住自己的微信号(现在注册微信号太难了)。虽然没能把这个项目做起来，但是开发过程中还是有一点收获的。

### 收获

1. 公众号填写服务器信息时，需要填写服务器的 url、token 等信息，在提交时会发`get`请求到填写的 url 上，开发者服务器需要做好校验处理，校验成功后需要将`query`接收的`echostr`返回给公众号服务器，才能提交成功。不能像[文档实例代码](https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html#%E6%8E%A5%E5%85%A5%E6%A6%82%E8%BF%B0)一样返回`true`，否则不能提交服务器信息。
2. 接收公众号通知的消息时，需要注意消息是 xml 数据，不能通过`query`、`body`、`params`的方式获取。需要监听`data`事件，获取二进制数据并且通过`toString`方法转换成字符串数据，然后才能解析 xml 数据。

```javascript
// 这是midway 框架的示例代码
this.ctx.req.on("data", async (data) => {
  const xmlData = data.toString();
  console.log("xmlData ]]></description>
            <content:encoded><![CDATA[<h1 id="记录通过个人公众号下载微信表情包项目失败告终过程" tabindex="-1">记录通过个人公众号下载微信表情包项目失败告终过程 <a class="header-anchor" href="#记录通过个人公众号下载微信表情包项目失败告终过程" aria-label="Permalink to &quot;记录通过个人公众号下载微信表情包项目失败告终过程&quot;"></a></h1>
<p>起因微信中有很多有趣的表情包，在其他软件上想用时却找不到下载按钮。偶然发现一些公众号可以下载微信收藏的表情包。从而想通过个人公众号将表情包下载到本地。</p>
<h3 id="项目流程图" tabindex="-1">项目流程图 <a class="header-anchor" href="#项目流程图" aria-label="Permalink to &quot;项目流程图&quot;"></a></h3>
<p><img src="./images/01.svg" alt=""></p>
<p>根据上图流程建立起了服务端，并且对接了公众号接口校验、通知事件、解析 xml 的功能。但是在公众号发送表情包消息时，服务端接收不了表情包，经过网上文章的探查，微信公众号通知的消息是不支持表情包。服务端会收到<code>[收到不支持的消息类型，暂无法显示]</code>的消息。可是别人的公众号为什么能提供下载表情包的能力呢？又经过一番网上文章的搜查，发现了两种方法。一种是爬虫，一种是利用公众号客服的能力。</p>
<ol>
<li>爬虫获取表情包。(个人可做)</li>
</ol>
<p>开发者服务器接收公众号通知的消息事件里的内容是没有表情包内容的。可是在小程序后台的私信功能上可以看到用户发的消息，包括表情包。到这里我们就想到了爬虫的方式去获取表情包。但是爬虫是需要处理鉴权、数据获取、获取表情包数据的接口所需要的数据获取，还要考虑怎么做到自动化处理整个流程。开发时间周期长，而且不一定能成功，毕竟不知道会不会出现封禁的风险。</p>
<ol start="2">
<li>公众号客服能力获取表情包。（公众号需要认证）</li>
</ol>
<p>根据公众号的文档，是可以将用户发送的消息转发到指定客服上的，还能通过提供的接口能力获取客服的历史消息。按照这个流程轻松就能获取到用户的表情包消息，并且还不用自己存储表情包，成本大大降低。但是这个能力是需要公众号认证的。个人公众号基本无望。</p>
<h3 id="结论" tabindex="-1">结论 <a class="header-anchor" href="#结论" aria-label="Permalink to &quot;结论&quot;"></a></h3>
<p>发现提供下载表情包的公众号，都是公司主体，没发现个人主体。基本就宣告了个人公众号开发开发此功能基本无望。不过可以尝试一下爬虫方式，就是会有点麻烦。我就不折腾了，要保住自己的微信号(现在注册微信号太难了)。虽然没能把这个项目做起来，但是开发过程中还是有一点收获的。</p>
<h3 id="收获" tabindex="-1">收获 <a class="header-anchor" href="#收获" aria-label="Permalink to &quot;收获&quot;"></a></h3>
<ol>
<li>公众号填写服务器信息时，需要填写服务器的 url、token 等信息，在提交时会发<code>get</code>请求到填写的 url 上，开发者服务器需要做好校验处理，校验成功后需要将<code>query</code>接收的<code>echostr</code>返回给公众号服务器，才能提交成功。不能像<a href="https://developers.weixin.qq.com/doc/offiaccount/Basic_Information/Access_Overview.html#%E6%8E%A5%E5%85%A5%E6%A6%82%E8%BF%B0" target="_blank" rel="noreferrer">文档实例代码</a>一样返回<code>true</code>，否则不能提交服务器信息。</li>
<li>接收公众号通知的消息时，需要注意消息是 xml 数据，不能通过<code>query</code>、<code>body</code>、<code>params</code>的方式获取。需要监听<code>data</code>事件，获取二进制数据并且通过<code>toString</code>方法转换成字符串数据，然后才能解析 xml 数据。</li>
</ol>
<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D">// 这是midway 框架的示例代码</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.ctx.req.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"data"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=></span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> xmlData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"xmlData ----"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> parseStringPromise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">(xmlData));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">});</span></span></code></pre>
</div>]]></content:encoded>
            <enclosure url="https://blog.xiaoda001.top/images/01.svg" length="0" type="image/svg"/>
        </item>
        <item>
            <title><![CDATA[使用 frp 实现内网穿透]]></title>
            <link>https://blog.xiaoda001.top/article/frp/01_使用frp实现内网穿透/</link>
            <guid>https://blog.xiaoda001.top/article/frp/01_使用frp实现内网穿透/</guid>
            <pubDate>Sun, 03 Nov 2024 14:37:09 GMT</pubDate>
            <description><![CDATA[使用 frp 实现内网穿透

 下载安装包
- 在此下载地址
- 下载 `linux_amd64` 和 `windows_amd64`
&gt; 这里使用 linux 服务器和 windows 客户端]]></description>
            <content:encoded><![CDATA[<h1 id="使用-frp-实现内网穿透" tabindex="-1">使用 frp 实现内网穿透 <a class="header-anchor" href="#使用-frp-实现内网穿透" aria-label="Permalink to &quot;使用 frp 实现内网穿透&quot;"></a></h1>
<blockquote>
<p><a href="https://gofrp.org/zh-cn/" target="_blank" rel="noreferrer">官方文档</a></p>
</blockquote>
<h2 id="下载安装包" tabindex="-1">下载安装包 <a class="header-anchor" href="#下载安装包" aria-label="Permalink to &quot;下载安装包&quot;"></a></h2>
<ul>
<li>在此<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noreferrer">下载地址</a></li>
<li>下载 <code>linux_amd64</code> 和 <code>windows_amd64</code></li>
</ul>
<blockquote>
<p>这里使用 linux 服务器和 windows 客户端</p>
</blockquote>
<h2 id="服务器安装-frp" tabindex="-1">服务器安装 frp <a class="header-anchor" href="#服务器安装-frp" aria-label="Permalink to &quot;服务器安装 frp&quot;"></a></h2>
<ul>
<li>
<p>服务器 cd 到自定义目录，这里使用: <code>cd /frps</code></p>
</li>
<li>
<p>将下载好的 tar<code>linux_amd64</code> 包上传到服务器自定义目录下, 并解压。</p>
</li>
<li>
<p>修改<code>frps.toml</code>配置</p>
</li>
</ul>
<div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># frp 服务端的配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">bindAddr = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"0.0.0.0"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">bindPort = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7100</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 客户端链接的 kcp 端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">kcpBindPort = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7100</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># frp 服务端可视化配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 可以访问的ip</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">webServer.addr = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"0.0.0.0"</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">webServer.port = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7500</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">webServer.user = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"username"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">webServer.password = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"password"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 日志配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">log.to = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"/log/frps.log"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">log.level = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"info"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">log.maxDays = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 认证配置，客户端链接的认证</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">auth.method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"token"</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 自定义token值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">auth.token = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"testtoken"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">allowPorts = [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  { start = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">6000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, end = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span></code></pre>
</div><ul>
<li>
<p>自定义 service 服务</p>
</li>
<li>
<p><code>cd /etc/systemd/system</code></p>
</li>
<li>
<p>创建<code>frps.service</code>文件: <code>vim frps.service</code></p>
</li>
<li>
<p>输入以下内容</p>
</li>
</ul>
<div class="language-service vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">service</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description = frp server</span></span>
<span class="line"><span>After = network.target syslog.target</span></span>
<span class="line"><span>Wants = network.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Type=simple</span></span>
<span class="line"><span># 启动程序与配置文件的位置</span></span>
<span class="line"><span>ExecStart = /frps/frp_0.61.0_linux_amd64/frps -c /frps/frp_0.61.0_linux_amd64/frps.toml</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ExecStop = /bin/kill $MAINPID</span></span>
<span class="line"><span>Restart = alawys</span></span>
<span class="line"><span>RestartSec = S</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy = multi-user.target</span></span></code></pre>
</div><ul>
<li>刷新 system 的配置文件: <code>systemctl daemon-reload</code></li>
<li>启动 frp 服务: <code>systemctl start frps</code></li>
<li>查看 frp 服务状态: <code>systemctl status frps</code></li>
</ul>
<p>服务端启动成功后，可以在浏览器上输入<code>服务端公网ip:7500</code>, 可以看到 frp 服务端可视化界面</p>
<h2 id="客户端启动-frp" tabindex="-1">客户端启动 frp <a class="header-anchor" href="#客户端启动-frp" aria-label="Permalink to &quot;客户端启动 frp&quot;"></a></h2>
<ul>
<li>解压下载的<code>windows_amd</code>的包</li>
<li>修改<code>frpc.toml</code>配置</li>
</ul>
<div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">serverAddr = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"自己服务器的公网IP"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">serverPort = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">loginFailExit = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">log.to = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"./frpc.log"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">log.level = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"info"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">log.maxDays = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">7</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">auth.method = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"token"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">auth.token = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"testtoken"</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">proxies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"applet-server"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">type = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"tcp"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">localIP = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"127.0.0.1"</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 本地项目的端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">localPort = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8001</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 服务端需要监听的端口，服务端这个端口的流量都会转发到客户端上</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">remotePort = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">6100</span></span></code></pre>
</div><ul>
<li>在终端上打开解压出来的文件夹，并启动 <code>frp</code>客户端</li>
</ul>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">frpc.exe</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -c./frpc.toml</span></span></code></pre>
</div><p>启动成功后，终端会卡住不动，这是服务在运行中，可以在服务端可视化界面上看链接的客户端。</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[linux 常用命令]]></title>
            <link>https://blog.xiaoda001.top/article/linux/01_linux命令/</link>
            <guid>https://blog.xiaoda001.top/article/linux/01_linux命令/</guid>
            <pubDate>Sun, 03 Nov 2024 14:12:00 GMT</pubDate>
            <description><![CDATA[linux 常用命令
```shell
 压缩文件 file1 和目录 dir2 到 test.tar.gz
tar -zcvf test.tar.gz file1 dir2
 解压 test.tar]]></description>
            <content:encoded><![CDATA[<h1 id="linux-常用命令" tabindex="-1">linux 常用命令 <a class="header-anchor" href="#linux-常用命令" aria-label="Permalink to &quot;linux 常用命令&quot;"></a></h1>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 压缩文件 file1 和目录 dir2 到 test.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -zcvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> test.tar.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> file1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> dir2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 解压 test.tar.gz（将 c 换成 x 即可）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> test.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 列出压缩文件的内容</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -ztvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> test.tar.gz</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ubuntu 安装 mysql8]]></title>
            <link>https://blog.xiaoda001.top/article/mysql/01_ubuntu安装mysql8/</link>
            <guid>https://blog.xiaoda001.top/article/mysql/01_ubuntu安装mysql8/</guid>
            <pubDate>Sun, 03 Nov 2024 14:11:22 GMT</pubDate>
            <description><![CDATA[ubuntu 安装 mysql8
 步骤
- 更新 apt 源
  `sudo apt update`
- 查看可使用的 mysql 安装包
  `sudo apt search mysql-serv]]></description>
            <content:encoded><![CDATA[<h1 id="ubuntu-安装-mysql8" tabindex="-1">ubuntu 安装 mysql8 <a class="header-anchor" href="#ubuntu-安装-mysql8" aria-label="Permalink to &quot;ubuntu 安装 mysql8&quot;"></a></h1>
<h2 id="步骤" tabindex="-1">步骤 <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤&quot;"></a></h2>
<ul>
<li>
<p>更新 apt 源
<code>sudo apt update</code></p>
</li>
<li>
<p>查看可使用的 mysql 安装包
<code>sudo apt search mysql-server</code></p>
</li>
<li>
<p>安装</p>
</li>
</ul>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 安装最新版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> mysql-server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 安装指定版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> mysql-server-8.0</span></span></code></pre>
</div><ul>
<li>
<p>查看 mysql 是否已启动
<code>systemctl status mysql</code></p>
</li>
<li>
<p>如果没有启动，启动 mysql
<code>systemctl start mysql</code></p>
</li>
<li>
<p>修改密码、权限</p>
</li>
</ul>
<div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"># 登录mysql，在默认安装时如果没有让我们设置密码，则直接回车就能登录成功。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">mysql </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">root</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">p</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"># 设置密码 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">mysql8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583"> USER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> 'root'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">'localhost'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> IDENTIFIED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> mysql_native_password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> '新密码'</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"># 刷新缓存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">flush privileges;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"># 退出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">exit;</span></span></code></pre>
</div><p>到这里<code>mysql</code>就安装完成了。退出<code>mysql</code>后，再次进入就需要输入密码，这里需要注意密码的保存。如果需要远程连接 <code>mysql</code>，需要修改配置文件<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>，将<code>bind-address</code>的值改为<code>0.0.0.0</code>，然后重启<code>mysql</code>服务。</p>
<blockquote>
<p>没有 bind-address , 就需要自己添加</p>
</blockquote>
<h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;"></a></h2>
<ul>
<li><a href="https://blog.csdn.net/weixin_45626288/article/details/133220238" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_45626288/article/details/133220238</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Nextjs 学习之搭建项目]]></title>
            <link>https://blog.xiaoda001.top/article/fontend/Nextjs/01_Nextjs学习之搭建项目/</link>
            <guid>https://blog.xiaoda001.top/article/fontend/Nextjs/01_Nextjs学习之搭建项目/</guid>
            <pubDate>Wed, 18 Sep 2024 14:19:08 GMT</pubDate>
            <description><![CDATA[Nextjs 学习之搭建项目
 创建项目
```bash
npx create-next-app@latest
```
根据提示一步一步完成配置
```bash
 项目名称
What is your ]]></description>
            <content:encoded><![CDATA[<h1 id="nextjs-学习之搭建项目" tabindex="-1">Nextjs 学习之搭建项目 <a class="header-anchor" href="#nextjs-学习之搭建项目" aria-label="Permalink to &quot;Nextjs 学习之搭建项目&quot;"></a></h1>
<h2 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;"></a></h2>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> create-next-app@latest</span></span></code></pre>
</div><p>根据提示一步一步完成配置</p>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 项目名称</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">What</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> your</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> project</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> named?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> my-app</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 是否使用TypeScript?</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> TypeScript?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 是否使用ESLint?</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ESLint?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 是否使用 Tailwind CSS?</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Tailwind</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> CSS?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 是否使用 `src/` 为根目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> `</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">src/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0"> directory?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 是否使用 App Router?</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> App</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> Router?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (recommended) No / Yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 是否使用路径别名。默认 @/* 指向 src/ 目录。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">Would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> customize</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> default</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> alias</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> (@/*)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> No / Yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 自定义 import 别名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">What</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> alias</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> would</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> like</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> configured?</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> @/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">*</span></span></code></pre>
</div><p>完成配置后，会自动安装项目文件。</p>
<h2 id="配置-prettier-格式化规范" tabindex="-1">配置 Prettier 格式化规范 <a class="header-anchor" href="#配置-prettier-格式化规范" aria-label="Permalink to &quot;配置 Prettier 格式化规范&quot;"></a></h2>
<ul>
<li>
<p>安装 prettier，参考<a href="./../../Prettier/项目添加Prettier格式化规范/">项目添加 Prettier 格式化规范</a></p>
</li>
<li>
<p>安装 prettier 与 eslint 兼容插件</p>
</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --save-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> eslint-config-prettier</span></span></code></pre>
</div><ul>
<li>eslint 配置文件配置 prettier</li>
</ul>
<div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "extends"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"next"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"prettier"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[pnpm 搭建项目]]></title>
            <link>https://blog.xiaoda001.top/article/fontend/pnpm/01_pnpm搭建项目/</link>
            <guid>https://blog.xiaoda001.top/article/fontend/pnpm/01_pnpm搭建项目/</guid>
            <pubDate>Sat, 10 Aug 2024 14:08:32 GMT</pubDate>
            <description><![CDATA[pnpm 搭建项目
pnpm 是一个包管理器，它可以帮助我们快速搭建项目，并且可以帮助我们管理项目的依赖。
- 安装 pnpm
```bash
npm install -g pnpm
```
- 创建]]></description>
            <content:encoded><![CDATA[<h1 id="pnpm-搭建项目" tabindex="-1">pnpm 搭建项目 <a class="header-anchor" href="#pnpm-搭建项目" aria-label="Permalink to &quot;pnpm 搭建项目&quot;"></a></h1>
<p>pnpm 是一个包管理器，它可以帮助我们快速搭建项目，并且可以帮助我们管理项目的依赖。</p>
<ul>
<li>安装 pnpm</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> pnpm</span></span></code></pre>
</div><ul>
<li>创建目录</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> project_demo</span></span></code></pre>
</div><ul>
<li>初始化项目</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> init</span></span></code></pre>
</div><ul>
<li>根目录创建 <code>.npmrc</code> 文件</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 允许将所有依赖项提升到项目的根目录，这样可以减少依赖嵌套的深度，使得依赖管理更加高效。这种做法有时被认为是“不知羞耻”的，因为它可能导致依赖冲突和难以维护的依赖树。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">shamefully-hoist</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 宽松地处理对等依赖关系。这意味着如果项目依赖于另一个软件包，而该软件包指定了特定版本的对等依赖，使用false设置时，即使项目中不存在这些对等依赖的指定版本，安装过程也不会失败。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">strict-peer-dependencies</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 忽略工作区根目录检查。通常，包管理器会检查当前目录是否为工作区的根目录，如果不是，它可能会发出警告或采取不同的行为。设置为true可以禁用这种检查，使得依赖安装可以在任何目录进行。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">ignore-workspace-root-check</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">true</span></span></code></pre>
</div><ul>
<li>根目录创建 <code>pnpm-workspace.yaml</code> 文件</li>
</ul>
<div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D">packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"packages/*"</span></span></code></pre>
</div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[window11 专业版激活]]></title>
            <link>https://blog.xiaoda001.top/article/window/03_window11专业版激活/</link>
            <guid>https://blog.xiaoda001.top/article/window/03_window11专业版激活/</guid>
            <pubDate>Sat, 10 Aug 2024 14:08:32 GMT</pubDate>
            <description><![CDATA[window11 专业版激活
- 打开`powsershell` 管理员模式，依次输入以下命令
```shell
slmgr -ipk W269N-WFGWX-YVC9B-4J6C9-T83GX
sl]]></description>
            <content:encoded><![CDATA[<h1 id="window11-专业版激活" tabindex="-1">window11 专业版激活 <a class="header-anchor" href="#window11-专业版激活" aria-label="Permalink to &quot;window11 专业版激活&quot;"></a></h1>
<ul>
<li>打开<code>powsershell</code> 管理员模式，依次输入以下命令</li>
</ul>
<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">slmgr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -ipk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> W269N-WFGWX-YVC9B-4J6C9-T83GX</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">slmgr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -skms</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> kms.0t.net.cn</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 做完这一步会看到激活成功的弹窗</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">slmgr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> -ato</span></span></code></pre>
</div><blockquote>
<p>解释：
Windows11 专业版 KMS 激活密钥：W269N-WFGWX-YVC9B-4J6C9-T83GX
推荐 KMS 激活服务器:kms.0t.net.cn</p>
</blockquote>
<h2 id="文章参考" tabindex="-1">文章参考 <a class="header-anchor" href="#文章参考" aria-label="Permalink to &quot;文章参考&quot;"></a></h2>
<ul>
<li><a href="https://www.orcy.net.cn/1802.html" target="_blank" rel="noreferrer">https://www.orcy.net.cn/1802.html</a></li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[项目添加 Prettier 格式化规范]]></title>
            <link>https://blog.xiaoda001.top/article/fontend/Prettier/项目添加Prettier格式化规范/</link>
            <guid>https://blog.xiaoda001.top/article/fontend/Prettier/项目添加Prettier格式化规范/</guid>
            <pubDate>Mon, 05 Aug 2024 00:37:20 GMT</pubDate>
            <description><![CDATA[项目添加 Prettier 格式化规范
- vscode 安装 Prettier 插件
  插件地址： https://marketplace.visualstudio.com/items?itemN]]></description>
            <content:encoded><![CDATA[<h1 id="项目添加-prettier-格式化规范" tabindex="-1">项目添加 Prettier 格式化规范 <a class="header-anchor" href="#项目添加-prettier-格式化规范" aria-label="Permalink to &quot;项目添加 Prettier 格式化规范&quot;"></a></h1>
<ul>
<li>
<p>vscode 安装 Prettier 插件</p>
<p>插件地址： <a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode" target="_blank" rel="noreferrer">https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode</a></p>
</li>
<li>
<p>安装 Prettier</p>
</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --save-dev</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> --save-exact</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> prettier</span></span></code></pre>
</div><ul>
<li>项目根目录创建配置文件 <code>.prettierrc</code>, 添加配置, <a href="https://prettier.io/docs/en/options" target="_blank" rel="noreferrer">全部配置</a></li>
</ul>
<div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "printWidth"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">140</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "tabWidth"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "semi"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "singleQuote"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "quoteProps"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"as-needed"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "jsxSingleQuote"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "trailingComma"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"es5"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "bracketSpacing"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "jsxBracketSameLine"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "bracketSameLine"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "proseWrap"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"preserve"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "arrowParens"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"always"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">  "endOfLine"</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF">"lf"</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">}</span></span></code></pre>
</div><ul>
<li>项目根目录创建忽略检查配置文件 <code>.prettierignore</code>, 根据项目情况进行配置，用法与<code>.gitignore</code> 一致</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[vscode 保存新建文件的换行格式设置为 LF]]></title>
            <link>https://blog.xiaoda001.top/article/vscode/01_vscode 保存新建文件的换行格式设置为 LF/</link>
            <guid>https://blog.xiaoda001.top/article/vscode/01_vscode 保存新建文件的换行格式设置为 LF/</guid>
            <pubDate>Sun, 30 Jun 2024 13:12:02 GMT</pubDate>
            <description><![CDATA[vscode 保存新建文件的换行格式设置为 LF
- 安装插件 `EditorConfig for VS Code`
- 新建`.editorconfig` 文件在根目录
- `.editorconf]]></description>
            <content:encoded><![CDATA[<h1 id="vscode-保存新建文件的换行格式设置为-lf" tabindex="-1">vscode 保存新建文件的换行格式设置为 LF <a class="header-anchor" href="#vscode-保存新建文件的换行格式设置为-lf" aria-label="Permalink to &quot;vscode 保存新建文件的换行格式设置为 LF&quot;"></a></h1>
<ul>
<li>安装插件 <code>EditorConfig for VS Code</code></li>
<li>新建<code>.editorconfig</code> 文件在根目录</li>
<li><code>.editorconfig</code> 文件添加以下呢内容</li>
</ul>
<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">root </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">charset </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> utf</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">indent_style </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> space</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">indent_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">end_of_line </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8"> lf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">insert_final_newline </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8">trim_trailing_whitespace </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF"> true</span></span></code></pre>
</div><blockquote>
<p>保存文件时，将文件的换行格式保存为<code>LF</code></p>
</blockquote>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Windows 安装官方 office2021 版本永久免费]]></title>
            <link>https://blog.xiaoda001.top/article/window/01_Windows安装官方office2021版本永久免费/</link>
            <guid>https://blog.xiaoda001.top/article/window/01_Windows安装官方office2021版本永久免费/</guid>
            <pubDate>Sun, 30 Jun 2024 13:12:02 GMT</pubDate>
            <description><![CDATA[Windows 安装官方 office2021 版本永久免费
常见的办公软件包括 Word、Excel 和 PPT，几乎所有公司都会使用。在国内，大多数人都会使用 WPS 软件，它简单且具有云存储能力]]></description>
            <content:encoded><![CDATA[<h1 id="windows-安装官方-office2021-版本永久免费" tabindex="-1">Windows 安装官方 office2021 版本永久免费 <a class="header-anchor" href="#windows-安装官方-office2021-版本永久免费" aria-label="Permalink to &quot;Windows 安装官方 office2021 版本永久免费&quot;"></a></h1>
<p>常见的办公软件包括 Word、Excel 和 PPT，几乎所有公司都会使用。在国内，大多数人都会使用 WPS 软件，它简单且具有云存储能力。但是它采用了会员购买制度，许多功能需要升级为会员后才能使用。国外的 Office 软件也需要付费，采用许可证购买永久使用制度。作为一个遵循“能省则省”原则的普通人，我找到了一种可以免费使用 Office 的方法。</p>
<div class="tip custom-block"><p class="custom-block-title">TIP</p>
<p>💡 可以使用<code>Edge浏览器</code>打开后面内容的链接，在下载文件的时候会提高<strong>下载速度</strong>。</p>
</div>
<h2 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;"></a></h2>
<ul>
<li>
<p><strong>下载安装工具:</strong></p>
<ul>
<li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=49117" target="_blank" rel="noreferrer"><strong>https://www.microsoft.com/en-us/download/details.aspx?id=49117</strong></a></li>
<li><strong>打开下面链接，直接点击 download</strong>
<img src="./images/01.png" alt="01"></li>
</ul>
</li>
<li>
<p><strong>在找一个合适的文件夹，例如: F:\office (F 盘下的 office 文件夹，可以自己新建一个文件夹)，将下载好的安装工具移动到文件夹内。</strong></p>
</li>
<li>
<p><strong>双击安装工具，同意协议，安装目录选择当前的文件夹位置。</strong>
<img src="./images/02.png" alt="02"></p>
</li>
<li>
<p><strong>下载配置</strong></p>
<ul>
<li><a href="https://config.office.com/deploymentsettings" target="_blank" rel="noreferrer"><strong>https://config.office.com/deploymentsettings</strong></a></li>
<li><strong>产品结构根据自己系统选择（这里选择：<code>64位</code>）</strong></li>
<li><strong>产品选择 office 套件：<code>Office LTSC 标准版 2021 - 批量许可证</code> （其他产品看情况选择，这里只需要 offiice）</strong>
<img src="./images/03.png" alt="03"></li>
<li><strong>更新频道不用修改，保持默认</strong>
<img src="./images/04.png" alt="04"></li>
<li><strong>应用可以只选择<code>Excel</code>、<code>PowerPoint</code>、<code>Word</code>，其他的软件看个人需求，需要的可以选上</strong>。
<img src="./images/05.png" alt="05"></li>
<li><strong>语言选择 <code>简体中文</code>。(如果喜欢其他语言可以选择其他语言)</strong>
<img src="./images/06.png" alt="06"></li>
<li><strong>点右上角的导出</strong>
<img src="./images/07.png" alt="07"></li>
<li><strong>导出选项选择 XML</strong>
<img src="./images/08.png" alt="08"></li>
<li><strong>接收协议，配置 改为 <code>config</code></strong>
<img src="./images/09.png" alt="09"></li>
<li><strong>导出到上面安装 office 的文件夹</strong></li>
</ul>
</li>
<li>
<p><strong>输入命令安装 office</strong></p>
<ul>
<li><strong>打开终端: <code>win</code>+<code>R</code>, 输入：<code>cmd</code>，回车</strong></li>
<li><strong>切换到上面的目录（F:\office）</strong></li>
<li>依次输入以下两个命令</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 下载安装文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">setup.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /download</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> config.xml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D"># 安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">setup.exe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /configure</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> config.xml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">**</span></span></code></pre>
</div></li>
<li>
<p><strong>激活</strong></p>
<ul>
<li>在搜索框输入：<code>命令提示符</code>，右键选择管理员</li>
<li>切换到 office 的安装目录
<ul>
<li>32 位系统：<code>cd C:\Program Files(x86)\Microsoft Office\Office16</code></li>
<li>64 位系统：<code>cd C:\Program Files\Microsoft Office\Office16</code></li>
</ul>
</li>
<li>输入激活命令</li>
</ul>
<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" v-pre=""><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">cscript</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ospp.vbs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /sethst:kms.03k.org</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0">cscript</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> ospp.vbs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF"> /act</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF">**</span></span></code></pre>
</div></li>
<li>
<p><strong>激活成功后，打开 word，点击账号就可以看见激活成功。</strong></p>
</li>
</ul>
<h1 id="可能遇到的问题" tabindex="-1">可能遇到的问题 <a class="header-anchor" href="#可能遇到的问题" aria-label="Permalink to &quot;可能遇到的问题&quot;"></a></h1>
<ol>
<li>最后一步出现了<code>Error Code: 0x80080005</code>错误</li>
<li>原因：可能以前就安装过 office，或者是之前安装的 office 是用激活软件激活的。</li>
<li>解决方法：卸载以前安装的 office，并重新按上面步骤重新安装 office，然后进入注册表，将<code>KEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\SppExtComObj.exe</code>删除，重新输入激活命令。</li>
</ol>
]]></content:encoded>
            <enclosure url="https://blog.xiaoda001.top/images/01.png" length="0" type="image/png"/>
        </item>
        <item>
            <title><![CDATA[windows 如何安装驱动]]></title>
            <link>https://blog.xiaoda001.top/article/window/02_windows如何安装驱动/</link>
            <guid>https://blog.xiaoda001.top/article/window/02_windows如何安装驱动/</guid>
            <pubDate>Sun, 30 Jun 2024 13:12:02 GMT</pubDate>
            <description><![CDATA[windows 如何安装驱动
在使用 windows 电脑时，有可能会出现某个驱动损坏，丢失的情况。或者是自己手痒重装了 windows 系统，需要重新安装驱动。驱动下载安装可以使用`驱动精灵` 等第]]></description>
            <content:encoded><![CDATA[<h1 id="windows-如何安装驱动" tabindex="-1">windows 如何安装驱动 <a class="header-anchor" href="#windows-如何安装驱动" aria-label="Permalink to &quot;windows 如何安装驱动&quot;"></a></h1>
<p>在使用 windows 电脑时，有可能会出现某个驱动损坏，丢失的情况。或者是自己手痒重装了 windows 系统，需要重新安装驱动。驱动下载安装可以使用<code>驱动精灵</code> 等第三方软件，但是想要自己下载驱动并安装，则需要在对应的电脑品牌商提供的网站上下载(其他下载路径也可以)。下载后的驱动如何安装？其实是很简单的。</p>
<h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;"></a></h2>
<ul>
<li>搜索框输输入<code>设备管理器</code> ，打开。</li>
<li>选中这台设备的名字，右键-&gt;添加驱动程序</li>
</ul>
<p><img src="./images/01.png" alt="01"></p>
<ul>
<li>选择下载好的驱动，如果驱动是压缩包，选择前需要先解压。</li>
<li>添加完所有驱动就重启电脑。</li>
</ul>
]]></content:encoded>
            <enclosure url="https://blog.xiaoda001.top/images/01.png" length="0" type="image/png"/>
        </item>
    </channel>
</rss>