import{_ as e,o as a,c as o,a5 as t}from"./chunks/framework.DY9GNxgq.js";const p=JSON.parse('{"title":"vscode 运行 vue3 项目卡顿清空处理","description":"","frontmatter":{"tags":["vue","vscode"],"categories":["vue"]},"headers":[],"relativePath":"article/fontend/vue/01_vscode运行vue3项目卡顿清空处理/index.md","filePath":"article/fontend/vue/01_vscode运行vue3项目卡顿清空处理/index.md","lastUpdated":1750592704000}'),d={name:"article/fontend/vue/01_vscode运行vue3项目卡顿清空处理/index.md"},i=t('<h1 id="vscode-运行-vue3-项目卡顿清空处理" tabindex="-1">vscode 运行 vue3 项目卡顿清空处理 <a class="header-anchor" href="#vscode-运行-vue3-项目卡顿清空处理" aria-label="Permalink to &quot;vscode 运行 vue3 项目卡顿清空处理&quot;">​</a></h1><p>创建 vue3 项目，在 vscode 上创建新文件，经常出现代码提示缓慢，需要不断的重启 vscode。主要原因是 vscode 自带的 ts 解析插件与<code>Volar</code>插件冲突，需要禁用 vscode 的 ts 解析插件。</p><h2 id="禁用-vscode-的-ts-解析插件" tabindex="-1">禁用 vscode 的 ts 解析插件 <a class="header-anchor" href="#禁用-vscode-的-ts-解析插件" aria-label="Permalink to &quot;禁用 vscode 的 ts 解析插件&quot;">​</a></h2><ol><li>在当前项目的工作空间下，用 Ctrl + Shift + P (macOS：Cmd + Shift + P) 唤起命令面板。</li><li>输入 built，然后选择“Extensions：Show Built-in Extensions”。</li><li>在插件搜索框内输入 typescript (不要删除 @builtin 前缀)。</li><li>点击“TypeScript and JavaScript Language Features”右下角的小齿轮设置图标，然后在下拉菜单中选择“Disable (Workspace)”。</li><li>重新加载工作空间（重启 vscode 或者 reload window）。Takeover 模式将会在你打开一个 Vue 或者 TS 文件时自动启用。</li></ol><h2 id="另一种方法-推荐" tabindex="-1">另一种方法 (推荐) <a class="header-anchor" href="#另一种方法-推荐" aria-label="Permalink to &quot;另一种方法 (推荐)&quot;">​</a></h2><ul><li>vscode 设置中搜索<code>vue.server.hybridMode</code>，将其设置为<code>false</code></li><li>重启插件，或者重启 vscode</li><li>等待 vscode 初始化完成，再看看是否有卡顿现象</li></ul><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ol><li><a href="https://cloud.tencent.com/developer/article/2350048" target="_blank" rel="noreferrer">vscode 编写 vue3 项目代码提示缓慢问题处理</a></li></ol>',8),s=[i];function c(r,l,n,v,u,h){return a(),o("div",{"data-pagefind-body":!0},s)}const f=e(d,[["render",c]]);export{p as __pageData,f as default};
